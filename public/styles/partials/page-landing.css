#page-landing{
    background: var(--color-primary);
}

#page-landing #container{
    color: var(--color-text-in-primary);
}

.logo-container img{
    height: 10rem;
}

.logo-container{
    text-align: center;
    margin-bottom: 3.2rem;
}

.logo-container h2{
    font-weight: 500;
    font-size: 3.6rem;
    line-height: 4.6rem;
    margin-top: 0.8rem;
}

.hero-image{
    width: 100%;
}

.buttons-container{
    display: flex;
    justify-content: center;
    margin: 3.2rem 0;
}

.buttons-container a{
    width: 30rem;
    height: 10.4rem;
    border-radius: 0.8rem;
    margin-right: 1.6rem;
    font: 700 2.4rem Archivo;
    display: flex;/* como quero mexer com os elementos dentro de 'a', eh necessário utilizar display: flex */
    align-items: center;
    justify-content: center;
    text-decoration: none; /* remove a linha padrão embaixo dos links */
    color: var(--color-button-text);
    transition: background 0.2s;
}



.buttons-container a img{
    width: 4rem;
    margin-right: 2.4rem;
}

.buttons-container a.study{
    background: var(--color-primary-lighter);
}

.buttons-container a.study:hover{
    background: var(--color-primary-light);
}

.buttons-container a.give-classes{
    background: var(--color-secondary);
    margin-right: 0;
}

.buttons-container a.give-classes:hover{
    background: var(--color-secondary-dark);
}

.total-connections{
    font-size: 1.8rem;
    display: flex;
    align-items: center;
    justify-content: center;
}

.total-connections img{
    margin-left: 0.8rem;
}
@media(max-width: 1100px){
    :root{
        font-size: 40%; /* modifica as medidas rem */
    }

    .hero-image{
        height: 45rem;
    }
}

/* define qual css pegar dependendo da variável selecionada. No caso eh 'min-width' */
@media(min-width: 1100px){
    /* tudo feito dentro de @media será utilizado assim q a tela passar de 1100px, sobrescrevendo as variáveis que sofrerem mudanças */
    #page-landing #container{
        max-width: 1100px;
        /* utiliza linhas e colunas para mapeamento do site ao passar de 1100px */
        display: grid;
        grid-template-columns: 2fr 1fr 2fr; /* colunas */ 
        grid-template-rows: 350px 1fr; /* linhas */
        grid-template-areas: /* nomeia as areas delimitadas como martriz */
        "proffy image image"
        "button button texting"; /* espaço entre as linhas e colunas */
        column-gap: 87px;
        row-gap: 86px;
    }
    .logo-container{
        grid-area: proffy; /* delimita a area em que a classe será apresentada de acordo com o posicionamento da matriz antes feito */
        text-align: initial;
        align-self: center; /* nao deixa o conteúdo escapar do grid */
        margin: 0;
    }
    .logo-container img{
        height: 100%;
        height: 127px;
    }
    .hero-image{
        grid-area: image; /* delimita a area em que a classe será apresentada de acordo com o posicionamento da matriz antes feito */
        height: 350px;
    }
    .buttons-container{
        grid-area: button; /* delimita a area em que a classe será apresentada de acordo com o posicionamento da matriz antes feito */
        justify-content: flex-start;
        margin: 0;
    }
    .total-connections{
        grid-area: texting; /* delimita a area em que a classe será apresentada de acordo com o posicionamento da matriz antes feito */
        justify-self: end;
        font-size: 1.2rem;
    }
}